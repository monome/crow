#pragma once

#include <stm32f7xx.h>

typedef enum{ II_CROW  = 0x01
            , II_CROW2 = 0x02
            , II_CROW3 = 0x03
            , II_CROW4 = 0x04
} ii_ADDR_t;


/////////////////////
// setup
uint8_t ii_init( uint8_t address );
void ii_deinit( void );

void ii_set_pullups( uint8_t state );

uint8_t ii_get_address( void );
void ii_set_address( uint8_t address );


//////////////////////////
// help (autogenerated)
const char* ii_list_modules( void );
const char* ii_list_cmds( uint8_t address );


/////////////////////////
uint8_t ii_leader_enqueue( uint8_t address, uint8_t cmd, float* data );
void ii_leader_process( void ); // call from event loop


///////////////////////////
// reception dequeue
uint8_t* ii_processFollowRx( void );
uint8_t* ii_processLeadRx( void );

// decoded
void ii_process_dequeue_decode( void );
