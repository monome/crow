get_offset = 0x80

function make_iihelp(files)
    local h = '-- WARNING: auto-generated by util/ii_gen.lua\n'
.. '-- DO NOT EDIT BY HAND\n'
.. 'local is = {}\n'
.. 'is.lu={}\n'
.. '\n'
.. 'function is.new( name, address )\n'
.. '    local self = {}\n'
.. '    self.name = name\n'
.. '    self.help = function() II.m_help(address) end\n'
.. '    setmetatable( self, is )\n'
.. '    is.lu[address] = name\n'
.. '    return self\n'
.. 'end\n'
.. '\n'
.. 'is.__index = function( self, ix )\n'
.. '    local n = self.name\n'
.. '    local h = self.help\n'
.. '    rawset(II,n,dofile(string.format(\'build/ii_%s.lua\',n)))\n'
.. '    new = rawget(II,n)\n'
.. '    --rawset(new,name,n)\n'
.. '    rawset(rawget(II,n),\'help\',self.help)\n'
.. '    return rawget(new, ix)\n'
.. 'end\n'
.. 'setmetatable(is, is)\n\n'
    for _,f in ipairs(files) do
        h = h .. 'is.' ..  f.lua_name .. '=is.new(\''
              .. f.lua_name .. '\',' .. f.i2c_address .. ')\n'
    end
    h = h .. 'return is\n'
    return h
end

local in_file_dir = arg[1]
local out_file = arg[2]

do
    dir = io.popen('/bin/ls ' .. in_file_dir)
    files = {}
    for filename in dir:lines() do
        table.insert(files, dofile('lua/ii/' .. filename))
    end

    f = io.open( out_file, 'w' )
    f:write(make_iihelp(files))
    f:close()
end

-- example usage:
-- lua util/ii_lua_help.lua lua/ii/ build/ii_help.lua
